// Generated by LiveScript 1.2.0
(function(){
  (function(){
    var createCanvas, init, container;
    createCanvas = function(parent, width, height){
      var canvas;
      width == null && (width = 100);
      height == null && (height = 100);
      canvas = {};
      canvas.node = document.createElement('canvas');
      canvas.node.width = width;
      canvas.node.height = height;
      canvas.context = canvas.node.getContext('2d');
      parent.appendChild(canvas.node);
      return canvas;
    };
    init = function(container, width, height, fillColor){
      var canvas, context;
      canvas = createCanvas(container, width, height);
      context = canvas.context;
      canvas.history = [];
      canvas.commands = [];
      context.fillCircle = function(x, y, radius, fillColor){
        this.fillStyle = fillColor;
        this.beginPath();
        this.moveTo(x, y);
        this.arc(x, y, radius, 0, Math.PI * 2, false);
        this.fill();
      };
      canvas.node.onmousemove = function(e){
        var x, y, radius, fillColor;
        if (!canvas.isDrawing) {
          return;
        }
        x = e.pageX - this.offsetLeft;
        y = e.pageY - this.offsetTop;
        radius = 5;
        fillColor = '#000000';
        canvas.context.fillCircle(x, y, radius, fillColor);
        canvas.commands.push([x, y, radius, fillColor]);
      };
      canvas.redraw = function(){
        var i$, ref$, len$, x, j$, len1$, y;
        canvas.context.clearRect(0, 0, canvas.node.width, canvas.node.height);
        for (i$ = 0, len$ = (ref$ = canvas.history).length; i$ < len$; ++i$) {
          x = ref$[i$];
          for (j$ = 0, len1$ = x.length; j$ < len1$; ++j$) {
            y = x[j$];
            canvas.context.fillCircle(y[0], y[1], y[2], y[3]);
          }
        }
      };
      canvas.node.onmousedown = function(e){
        canvas.isDrawing = true;
      };
      canvas.node.onmouseup = function(e){
        var x;
        canvas.isDrawing = false;
        canvas.history.push((function(){
          var i$, ref$, len$, results$ = [];
          for (i$ = 0, len$ = (ref$ = canvas.commands).length; i$ < len$; ++i$) {
            x = ref$[i$];
            results$.push(x);
          }
          return results$;
        }()));
        canvas.commands = [];
      };
      window.onkeydown = function(e){
        if (e.ctrlKey) {
          canvas.ctrlActivated = true;
        }
      };
      window.onkeyup = function(e){
        switch (e.keyCode) {
        case 90:
          if (canvas.ctrlActivated) {
            canvas.history.pop();
            canvas.redraw();
          }
        }
        if (e.ctrlKey) {
          canvas.ctrlActivated = false;
        }
      };
    };
    container = document.getElementById('canvas');
    return init(container, window.innerWidth - 17, window.innerHeight - 45, '#000000');
  })();
}).call(this);
